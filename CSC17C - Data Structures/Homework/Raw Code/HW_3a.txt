//Attached: HW_3a, 3b, 3c
//==================================================
//Project: HW_3a
//==================================================
//Programmer: Wilman Garcia
//Class: CIS 17C
//=================================================

#include "UnsortedList.h"

void showMenu();
char getChoice();

int main()
{
	int value;
	char choice;
	UnsortedList list;

	do {

		showMenu();
		choice = getChoice();

		switch (toupper(choice))
		{
		case 'A':
			cout << "Enter a number: ";
			cin >> value;
			if (list.isFull())
			{
				cout << "The list is full - Cannot insert the number." << endl << endl;
			}
			else {
				list.insertItem(value);
				cout << endl;
			}
			break;

		case 'B':
			cout << "Enter a number to be deleted: ";
			cin >> value;
			if (list.isEmpty())
			{
				cout << "The list is empty" << endl;
			}
			else {
				list.deleteItem(value);
			}
			break;
		}
	} while (toupper(choice) != 'C');

	return 0;
}
//==================================================

void showMenu() {
	cout << "a. Insert a number into  the list." << endl;
	cout << "b. Delete a number from the list." << endl << endl;
}
//==================================================

char getChoice()
{
	char choice;
	cout << "Enter your choice (C to quit): ";
	cin >> choice;

	return choice;
}
//==================================================

//UnsortedList.cpp

#include "UnsortedList.h"

UnsortedList::UnsortedList()
{
}


UnsortedList::~UnsortedList()
{
}

void UnsortedList::insertItem(int value)
{
	numbers[length] = value;
	length++;
}

void UnsortedList::deleteItem(int item)
{
	int location = 0;

	while (item != numbers[location] && location < length)
	{
		location++;
	}

	if (location == length)
	{
		cout << "The item is not in the list." << endl << endl;
	}

	if (location < length)
	{
		numbers[location] = numbers[length - 1];
		cout << "Item has been deleted" << endl << endl;
		length--;
	}

}

bool UnsortedList::isFull() const
{
	return (length == MAX_SIZE);
}

bool UnsortedList::isEmpty() const
{
	return (length == 0);
}
//==================================================

//UnsortedList.h

#include <iostream>
using namespace std;
const int MAX_SIZE = 10;

class UnsortedList
{
private:
	int numbers[MAX_SIZE];
	int length = 0;

public:
	UnsortedList();
	~UnsortedList();
	void insertItem(int);
	void deleteItem(int);
	bool isFull() const;
	bool isEmpty() const;
};

//==================================================

/*OUTPUT

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 1

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 2

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 3

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 4

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 5

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 6

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 7

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 8

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 9

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 10

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): a
Enter a number: 11
The list is full - Cannot insert the number.

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): b
Enter a number to be deleted: 10
Item has been deleted

a. Insert a number into  the list.
b. Delete a number from the list.

Enter your choice (C to quit): C
Press any key to continue . . .
*/
//==================================================
